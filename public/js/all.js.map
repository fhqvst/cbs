{"version":3,"sources":["app.js","orders.js"],"names":[],"mappingszLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"all.js","sourcesContent":["\n(function($) {\n\n    \"use strict\";\n\n    // Initialize\n    $(document).ready(initialize);\n    function initialize() {\n\n        $('.block__header').click(function () {\n            $(this).parents('.block').toggleClass('is-minimized');\n            $(this).find('i').toggleClass('ion-ios-minus-empty');\n            $(this).find('i').toggleClass('ion-ios-plus-empty');\n        });\n\n        $('.notice__close').click(function () {\n            $(this).parents('.notice').remove();\n        });\n\n\n        $.getJSON('http://www.highcharts.com/samples/data/jsonp.php?a=e&filename=aapl-ohlc.json&callback=?', function (data) {\n            var colors = {\n                red: \"#FB0E29\",\n                green: \"#38BBA5\",\n                blue: \"#38a5bb\",\n                black: \"#333\",\n                white: \"#fff\",\n                gray: \"#ccc\",\n                offWhite: \"#eee\",\n                orange: \"#FF6E4C\"\n            };\n            Highcharts.theme = {\n                title: {\n                    style: {\n                        color: '#333',\n                        font: 'bold 16px DIN Pro, Roboto, Helvetica, sans-serif'\n                    }\n                },\n                subtitle: {\n                    style: {\n                        color: '#333',\n                        font: 'bold 12px serif'\n                    }\n                },\n                plotOptions: {\n                    candlestick: {\n                        color: colors.orange,\n                        upColor: colors.blue,\n                        lineColor: colors.orange,\n                        upLineColor: colors.blue,\n                        states: {\n                            hover: {\n                                lineWidth: 1\n                            }\n                        }\n                    }\n                },\n                tooltip: {\n                    backgroundColor: \"rgba(255,255,255,0.75)\",\n                    borderColor: \"rgba(0,0,0,0.25)\",\n                    borderWidth: 1,\n                    borderRadius: 0,\n                    shape: \"square\",\n                    shadow: false\n                },\n                rangeSelector: {\n                    buttonTheme: { // styles for the buttons\n                        fill: 'none',\n                        stroke: 'none',\n                        'stroke-width': 0,\n                        style: {\n                            color: colors.gray,\n                            background: 'transparent',\n                            textTransform: 'uppercase',\n                            fontFamily: 'DIN Pro',\n                            letterSpacing: '0.05em'\n                        },\n                        states: {\n                            hover: {\n                                fill: 'none',\n                                style: {\n                                    background: 'transparent',\n                                    color: colors.black\n                                }\n                            },\n                            select: {\n                                fill: 'none',\n                                style: {\n                                    color: colors.black\n                                }\n                            }\n                        }\n                    },\n                    inputStyle: {\n                        color: '#039',\n                        fontWeight: 'bold'\n                    },\n                    labelStyle: {\n                        left: 50\n                    },\n                    selected: 1\n                },\n                legend: {\n                    itemStyle: {\n                        font: '9pt Calibri, Roboto, sans-serif',\n                        color: 'black'\n                    },\n                    itemHoverStyle:{\n                        color: '#38BBA5'\n                    }\n                },\n                navigator: {\n                    outlineColor: colors.gray\n                }\n            };\n            Highcharts.setOptions(Highcharts.theme);\n            // create the chart\n            $('.instrument__chart__inner').highcharts('StockChart', {\n                rangeSelector : {\n                    selected : 1\n                },\n                series : [{\n                    type : 'candlestick',\n                    name : 'AAPL Stock Price',\n                    data : data,\n                    dataGrouping : {\n                        units : [\n                            [\n                                'week', // unit name\n                                [1] // allowed multiples\n                            ], [\n                                'month',\n                                [1, 2, 3, 4, 6]\n                            ]\n                        ]\n                    }\n                }],\n                xAxis: {\n                    gridLineColor: colors.offWhite,\n                    gridLineWidth: 1\n                },\n                yAxis: {\n                    gridLineColor: colors.offWhite,\n                    gridLineWidth: 1\n                },\n                credits: {\n                    enabled: false\n                },\n                chart: {\n                    marginTop: 0,\n                    marginLeft: 0,\n                    marginRight: 0,\n                    marginBottom: 25,\n                    spacingRight: 25,\n                    spacingBottom: 0\n                },\n                scrollbar: {\n                    enabled: false\n                }\n            });\n        });\n    }\n\n    // Smoothstate\n    var smoothState = $('#site').smoothState({\n        // Runs when a link has been activated\n        onStart: {\n            duration: 250, // Duration of our animation\n            render: function (container) {\n                container.addClass('is-ready');\n                container.restartCSSAnimations();\n            }\n        },\n        onReady: {\n            duration: 0,\n            render: function (container, newContent) {\n                container.removeClass('is-ready');\n                container.html(newContent);\n                initialize();\n            }\n        },\n        prefetch: false,\n        forms: '[type=submit]'\n    }).data('smoothState');\n\n})(jQuery);","var io = require('socket.io-client')('http://localhost:3000');\nio.on('test:App\\\\Events\\\\ViewInstrument', function(data) {\n    console.log(data);\n});\n\n/* LJAWDBKAJWGDV\n\nvar Order = React.createClass({\n    render: function () {\n        return (\n            <tr>\n                <td>{this.props.order.volume}</td>\n                <td>{this.props.order.price}</td>\n                <td>||||</td>\n            </tr>\n        );\n    }\n});\n\nvar Orderbook = React.createClass({\n\n    getInitialState: function() {\n        var orders = {};\n\n        socket.onChange(function(order) {\n            orders.push(order);\n            this.setState(\n                {orders: orders}\n            );\n        }.bind(this));\n\n        return {orders: orders};\n    },\n    render: function () {\n        var items = [];\n\n        this.props.orders.forEach(function(element, index) {\n            var order = this.props.orders[index];\n            items.push(<Order volume={order.symbol} price={order.price} order={order} />);\n        });\n\n        return (\n            <div className=\"row\">\n                <table className=\"table-hover\">\n                    <thead>\n                        <tr>\n                            <th>Antal</th>\n                            <th>Pris</th>\n                            <th>KÃ¶p</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {items}\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n});\n    */"],"sourceRoot":"/source/"}